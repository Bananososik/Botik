# main.py
from pyrogram import Client, filters
from bot_token import bot_token, api_id, api_hash
from logging_utils import save_message, save_media
import os

app = Client("my_bot", api_id=api_id, api_hash=api_hash, bot_token=bot_token)

user_states = {}

@app.on_message(filters.photo)
async def handle_photo(client, message):
    try:
        username = message.from_user.username
        if not os.path.exists("temp"):
            os.makedirs("temp")
            
        file_path = f"temp/{message.photo.file_unique_id}.jpg"
        
        await message.download(file_name=file_path)
        
        with open(file_path, "rb") as photo_file:
            photo_data = photo_file.read()
            save_media(username, photo_data, "photo")
        
        if os.path.exists(file_path):
            os.remove(file_path)
        
        save_message(username, "üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–ª—É—á–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {str(e)}")

@app.on_message(filters.sticker)
async def handle_sticker(client, message):
    try:
        username = message.from_user.username
        if not os.path.exists("temp"):
            os.makedirs("temp")
            
        file_path = f"temp/{message.sticker.file_unique_id}.webp"
        
        await message.download(file_name=file_path)
        
        with open(file_path, "rb") as sticker_file:
            sticker_data = sticker_file.read()
            save_media(username, sticker_data, "sticker")
        
        if os.path.exists(file_path):
            os.remove(file_path)
        
        save_message(username, "üéØ –°—Ç–∏–∫–µ—Ä –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∏–∫–µ—Ä–∞: {str(e)}")

user_states = {}

@app.on_message(filters.command("start"))
async def start(client, message):
    username = message.from_user.username
    user_states[username] = 'waiting_for_chromosomes'
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ö—Ä–æ–º–æ—Å–æ–º: ")
    save_message(username, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ö—Ä–æ–º–æ—Å–æ–º: ", is_bot=True)

@app.on_message(filters.private & ~filters.command("start"))
async def handle_message(client, message):
    username = message.from_user.username
    save_message(username, message.text)
    if user_states.get(username) == 'waiting_for_chromosomes':
        if message.text == "46":
            await message.reply("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —á–µ–ª–æ–≤–µ–∫!")
            save_message(username, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —á–µ–ª–æ–≤–µ–∫!", is_bot=True)
        else:
            await message.reply("–í—ã –¥–∞—É–Ω!")
            save_message(username, "–í—ã –¥–∞—É–Ω!", is_bot=True)
        user_states[username] = None

        
print("Bot started!")
app.run()